#mc pitts
#1. AND
import numpy as np
x1 = np.array([0,0,0,0,1,1,1,1]) 
x2 = np.array([0,0,1,1,0,0,1,1]) 
x3 = np.array([0,1,0,1,0,1,0,1]) 
f = x1+x2+x3 
max_value = 0 
l=list() 
for (a, b, c) in zip(x1, x2, x3): 
  y = a and b and c 
  print(a, b, c, 'y = ', y) 
  if y > max_value:
    max_value = a + b + c 
    print("Theta = ", max_value) 

#NOT
import numpy as np
x = np.array([0,1])
y = np.array([1,0])
theta = 1
f = x
y_pred = (f < theta).astype(int)
if np.all(y == y_pred):
  print("f =",f)
  print("y_pred =",y_pred)
  print("threshold =",theta)

#NOR
def mp_neuron_nor_gate(x1, x2):
 threshold = 2
 if x1 == 0 and x2 == 0:
  return 1
 else:
  return 0
print(mp_neuron_nor_gate(0,0))
print(mp_neuron_nor_gate(0,1))
print(mp_neuron_nor_gate(1,0))
print(mp_neuron_nor_gate(1,1))

#X1 AND !X2 :
import numpy as np
x1 = np.array([0,0,1,1])
x2 = np.array([0,1,0,1])
f = x1 + x2
max_value = 0
l=list()
for (a, b) in zip(x1, x2):
  y = a and (not b)
  if y == True:
    y = 1
  else:
    y = 0
  print(a, b, 'y = ', y)
  if y > max_value:
    max_value = a + b
print("Theta = ", max_value)

#perceptron
#AND LOGIC:
import numpy as np 
x1 = np.array([0,0,1,1]) 
x2 = np.array([0,1,0,1]) 
y = np.array([0,0,0,1]) 
w1 = 1 
w2 = 1 
theta = 2 #threshold 
f = x1*w1+x2*w2
y_pred = (f>=theta).astype(int) 
if np.all(y == y_pred): 
print(f"f = {f}\ny_pred = {y_pred}\ncorrect weights and threshold")
print("w1=",w1, “\n”,"w2=",w2) 
print("threshold=",theta)
else:
print("change the weights/threshold")
#OR LOGIC:
import numpy as np 
x1 = np.array([0,0,1,1]) 
x2 = np.array([0,1,0,1]) 
y = np.array([0,1,1,1]) 
w1 = 1 
w2 = 1 
theta = 1 #threshold 
f = x1*w1+x2*w2
y_pred = (f>=theta).astype(int) 
if np.all(y == y_pred): 
print(f"f = {f}\ny_pred = {y_pred}\ncorrect weights and threshold")
print("w1=",w1, “\n”,"w2=",w2) 
print("threshold=",theta)
else:
print("change the weights/threshold")
#NOR LOGIC:
import numpy as np 
x1 = np.array([0,0,1,1]) 
x2 = np.array([0,1,0,1]) 
y = np.array([1,0,0,0]) 
w1 = w2 = 1 
theta = 0 #threshold 
f = x1*w1+x2*w2
y_pred = (f>=theta).astype(int) 
if np.all(y == y_pred): 
print(f"f = {f}\ny_pred = {y_pred}\ncorrect weights and threshold")
print("w1=",w1, “\n”,"w2=",w2) print("threshold=",theta)
else:
print("change the weights/threshold")
#NAND LOGIC:
import numpy as np 
x1 = np.array([0,0,1,1]) 
x2 = np.array([0,1,0,1]) 
y = np.array([1,1,1,0]) 
w1 = w2 = 1 
theta = 1 #threshold 
f = x1*w1+x2*w2
y_pred = (f>=theta).astype(int) 
if np.all(y == y_pred): 
print(f"f = {f}\ny_pred = {y_pred}\ncorrect weights and threshold")
print("w1=",w1, “\n”,"w2=",w2, “\n”, “threshold =”, theta) 
else:
print("change the weights/threshold")
